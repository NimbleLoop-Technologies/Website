name: SonarCloud Analysis

on:
  pull_request:
    branches: [ "master" ]

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Cache SonarCloud packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v4
      with:
        path: ./.sonar/scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner

    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: bash
      run: |
        mkdir -p ./.sonar/scanner
        dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

    - name: Restore dependencies
      run: dotnet restore

    - name: Begin SonarCloud analysis
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: bash
      run: |
        ./.sonar/scanner/dotnet-sonarscanner begin \
          /k:"NimbleLoop-Technologies_Website" \
          /o:"nimbleloop-technologies" \
          /d:sonar.token="$SONAR_TOKEN" \
          /d:sonar.host.url="https://sonarcloud.io" \
          /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" \
          /d:sonar.coverage.exclusions="**/*Test*.cs,**/*Tests.cs,**/Migrations/**,**/Program.cs,**/*.Client/**,**/wwwroot/**,**/Data/**" \
          /d:sonar.exclusions="**/bin/**,**/obj/**,**/wwwroot/lib/**,**/Migrations/**,**/Data/**"

    - name: Build and Test with Coverage
      shell: bash
      run: |
        dotnet build --no-restore --configuration Release
        
        # Run tests with coverage for all test projects following Clean Architecture structure
        echo "Running tests with coverage for Clean Architecture test projects..."
        dotnet test --no-build --configuration Release \
          --collect:"XPlat Code Coverage" \
          --results-directory "./TestResults/" \
          --logger "trx;LogFileName=test_results.trx" \
          -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover

    - name: End SonarCloud analysis
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: bash
      run: ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="$SONAR_TOKEN"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          ./TestResults/**/*.trx
          ./TestResults/**/*.xml